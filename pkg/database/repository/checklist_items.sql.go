// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: checklist_items.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const checkChecklistItem = `-- name: CheckChecklistItem :exec
update checklist_items
set checked_at = now()
where checklist_item_id = $1
`

func (q *Queries) CheckChecklistItem(ctx context.Context, checklistItemID pgtype.UUID) error {
	_, err := q.db.Exec(ctx, checkChecklistItem, checklistItemID)
	return err
}

const createChecklistItem = `-- name: CreateChecklistItem :one
insert into checklist_items(checklist_id, item)
values($1, $2) returning item
`

type CreateChecklistItemParams struct {
	ChecklistID pgtype.UUID
	Item        string
}

func (q *Queries) CreateChecklistItem(ctx context.Context, arg CreateChecklistItemParams) (string, error) {
	row := q.db.QueryRow(ctx, createChecklistItem, arg.ChecklistID, arg.Item)
	var item string
	err := row.Scan(&item)
	return item, err
}

const deleteChecklistItem = `-- name: DeleteChecklistItem :exec
update checklist_items
set deleted_at = now()
where checklist_item_id = $1
`

func (q *Queries) DeleteChecklistItem(ctx context.Context, checklistItemID pgtype.UUID) error {
	_, err := q.db.Exec(ctx, deleteChecklistItem, checklistItemID)
	return err
}

const updateChecklistItem = `-- name: UpdateChecklistItem :one
update checklist_items
set item = $1
where checklist_item_id = $2
returning item
`

type UpdateChecklistItemParams struct {
	Item            string
	ChecklistItemID pgtype.UUID
}

func (q *Queries) UpdateChecklistItem(ctx context.Context, arg UpdateChecklistItemParams) (string, error) {
	row := q.db.QueryRow(ctx, updateChecklistItem, arg.Item, arg.ChecklistItemID)
	var item string
	err := row.Scan(&item)
	return item, err
}
